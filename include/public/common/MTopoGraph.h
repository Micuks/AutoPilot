// ==========================================================================
// Copyright (C) 2018 - 2021 Beijing 51WORLD Digital Twin Technology Co., Ltd. 
// , and/or its licensors.  All rights reserved.
//
// The coded instructions, statements, computer programs, and/or related 
// material (collectively the "Data") in these files contain unpublished
// information proprietary to Beijing 51WORLD Digital Twin Technology Co., Ltd. 
// ("51WORLD") and/or its licensors,  which is protected by the People's 
// Republic of China and/or other countries copyright law and by 
// international treaties.
//
// The Data may not be disclosed or distributed to third parties or be
// copied or duplicated, in whole or in part, without the prior written
// consent of 51WORLD.
//
// The copyright notices in the Software and this entire statement,
// including the above license grant, this restriction and the following
// disclaimer, must be included in all copies of the Software, in whole
// or in part, and all derivative works of the Software, unless such copies
// or derivative works are solely in the form of machine-executable object
// code generated by a source language processor.

// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND.
// 51WORLD DOES NOT MAKE AND HEREBY DISCLAIMS ANY EXPRESS OR IMPLIED
// WARRANTIES INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF
// NON-INFRINGEMENT, MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE,
// OR ARISING FROM A COURSE OF DEALING, USAGE, OR TRADE PRACTICE. IN NO
// EVENT WILL 51WORLD AND/OR ITS LICENSORS BE LIABLE FOR ANY LOST
// REVENUES, DATA, OR PROFITS, OR SPECIAL, DIRECT, INDIRECT, OR
// CONSEQUENTIAL DAMAGES, EVEN IF 51WORLD AND/OR ITS LICENSORS HAS
// BEEN ADVISED OF THE POSSIBILITY OR PROBABILITY OF SUCH DAMAGES.
// ==========================================================================
#pragma once

#include "public/libexport.h"
#ifdef STATIC_SSD
	#include "SSD/public/SimVector.h"
#else
	#include "SSD/SimVector.h"
#endif
#include "MLaneId.h"

namespace HDMapStandalone {

	struct LIBEXPORT MTopoNode {
		//@brief start s value.
		double startS;
		//@brief end s value.
		double endS;
		//@brief lane ID that topo node represents
		MLaneId laneId;

		//@brief index pos list for in from all edges.
		SSD::SimVector<int> inFromAllEdge;
		//@brief index pos list for in from left side edges.
		SSD::SimVector<int> inFromLeftEdge;
		//@brief index pos list for in from right side edges.
		SSD::SimVector<int> inFromRightEdge;
		//@brief index pos list for in from predescessor edges.
		SSD::SimVector<int> inFromPreEdge;

		//@brief index pos list for out to all edges.
		SSD::SimVector<int> outToAllEdge;
		//@brief index pos list for out to left side edges.
		SSD::SimVector<int> outToLeftEdge;
		//@brief index pos list for out to right side edges.
		SSD::SimVector<int> outToRightEdge;
		//@brief index pos list for out to successor side edges.
		SSD::SimVector<int> outToSucEdge;
	};

	struct LIBEXPORT MTopoEdge {
		//@brief lane ID of from topo node.
		MLaneId fromLaneId;
		//@brief lane ID of to topo node.
		MLaneId toLaneId;
		//@brief index pos of from topo node that in topo node list.
		int fromNodePos;
		//@brief index pos of to topo node that in topo node list.
		int toNodePos;
	};

	struct LIBEXPORT MTopoGraph
	{
		//@brief topo node list.
		SSD::SimVector<MTopoNode> topoNodes;
		//@brief topo edge list.
		SSD::SimVector<MTopoEdge> topoEdges;
	};

}
