// ==========================================================================
// Copyright (C) 2018 - 2021 Beijing 51WORLD Digital Twin Technology Co., Ltd. 
// , and/or its licensors.  All rights reserved.
//
// The coded instructions, statements, computer programs, and/or related 
// material (collectively the "Data") in these files contain unpublished
// information proprietary to Beijing 51WORLD Digital Twin Technology Co., Ltd. 
// ("51WORLD") and/or its licensors,  which is protected by the People's 
// Republic of China and/or other countries copyright law and by 
// international treaties.
//
// The Data may not be disclosed or distributed to third parties or be
// copied or duplicated, in whole or in part, without the prior written
// consent of 51WORLD.
//
// The copyright notices in the Software and this entire statement,
// including the above license grant, this restriction and the following
// disclaimer, must be included in all copies of the Software, in whole
// or in part, and all derivative works of the Software, unless such copies
// or derivative works are solely in the form of machine-executable object
// code generated by a source language processor.

// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND.
// 51WORLD DOES NOT MAKE AND HEREBY DISCLAIMS ANY EXPRESS OR IMPLIED
// WARRANTIES INCLUDING, BUT NOT LIMITED TO, THE WARRANTIES OF
// NON-INFRINGEMENT, MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE,
// OR ARISING FROM A COURSE OF DEALING, USAGE, OR TRADE PRACTICE. IN NO
// EVENT WILL 51WORLD AND/OR ITS LICENSORS BE LIABLE FOR ANY LOST
// REVENUES, DATA, OR PROFITS, OR SPECIAL, DIRECT, INDIRECT, OR
// CONSEQUENTIAL DAMAGES, EVEN IF 51WORLD AND/OR ITS LICENSORS HAS
// BEEN ADVISED OF THE POSSIBILITY OR PROBABILITY OF SUCH DAMAGES.
// ==========================================================================
#pragma once

#include "public/libexport.h"
#include "SSD/SimString.h"
#include "SSD/SimPoint3D.h"
#include "MRoadMark.h"

namespace HDMapStandalone {

	struct LIBEXPORT MParkingSpaceMarking
	{
		//@brief marking's side.
		SSD::SimString side;

		//@brief marking's type.
		ERoadMarkType type = ERoadMarkType::none;

		//@brief marking's color.
		ERoadMarkColor color = ERoadMarkColor::standard;

		//@brief marking's line width.
		double width = 0.13;
	};

	struct LIBEXPORT MParkingSpace
	{
		//@brief object's id.
		long id;

		//@brief owner road's id.
		long roadId;

		//@brief object's location.
		SSD::SimPoint3D pt;

		//@brief heading direction, always fuzzy align with 'front' direction.
		SSD::SimPoint3D heading;

		//@brief parking space's boundary knot list. Assume knot order is [knot_a, knot_b, knot_c, knot_d] as anticlockwise.
		//segment{knot_a, knot_d} represents 'front', usually as a valid entrance that a car can enter into the parkingSpace.
		//segment{knot_a, knot_b} represnets 'left'.
		//segment{knot_b, knot_c} represnets 'rear'.
		//segment{knot_c, knot_d} represnets 'right'.
		SSD::SimPoint3DVector boundaryKnots;

		//@brief front marking.
		MParkingSpaceMarking front;

		//@brief rear marking.
		MParkingSpaceMarking rear;

		//@brief left marking.
		MParkingSpaceMarking left;

		//@brief right marking.
		MParkingSpaceMarking right;
	};
}
